name: Deploy Jekyll site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write # changed to write so workflow can commit Gemfile.lock if necessary
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Optional: Remove Gemfile.lock to ensure it's generated for Linux
      - name: Remove Gemfile.lock
        run: rm -f website/Gemfile.lock

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          working-directory: ./website

      - name: Install dependencies
        run: |
          cd website
          bundle install --jobs 4 --retry 3

      # Optional: Commit updated Gemfile.lock if it changed (only on main)
      - name: Commit updated Gemfile.lock if changed
        if: github.ref == 'refs/heads/main'
        run: |
          cd website
          git config --global user.email "ci@github.com"
          git config --global user.name "GitHub Actions"
          git add Gemfile.lock
          if ! git diff --cached --quiet; then
            git commit -m "Update Gemfile.lock for Linux platform [skip ci]"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build PDF from Markdown
        run: |
          ./build.sh markdown build
          mkdir -p website/static/pdfs
          cp output/bridge_neural_networks_md.pdf website/static/pdfs/bridge_neural_networks.pdf

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Build with Jekyll
        run: |
          cd website
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./website/_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
